name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes e gerar relatórios de cobertura
        run: pytest --cov=src --cov-report=xml

      - name: Upload dos relatórios de cobertura para o Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  build:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Compilar com PyInstaller (Linux/macOS)
        if: runner.os != 'Windows'
        run: pyinstaller --onefile --windowed --name="psy-r" --add-data="src/app/assets:app/assets" src/main.py
      - name: Compilar com PyInstaller (Windows)
        if: runner.os == 'Windows'
        run: pyinstaller --onefile --windowed --name="psy-r" --add-data="src/app/assets;app/assets" src/main.py
      - name: Renomear binário
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then mv dist/psy-r psyR-linux; fi
          if [ "${{ runner.os }}" == "macOS" ]; then mv dist/psy-r psyR-macos; fi
          if [ "${{ runner.os }}" == "Windows" ]; then mv dist/psy-r.exe psyR-windows.exe; fi
      - name: Upload artefato
        uses: actions/upload-artifact@v4
        with:
          name: psyR-${{ matrix.os }}
          path: psyR-*

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artefatos
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Criar Release e Anexar Artefatos
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}